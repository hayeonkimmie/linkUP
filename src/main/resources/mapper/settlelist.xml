<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="mapper.settlelist">
    <!-- 1. 정산 회차 구하기 (현재 프로젝트에 대해 등록된 최대 회차) -->
    <select id="selectNextSettlementCount" resultType="int">
        SELECT COALESCE(MAX(cnt), 0) + 1
        FROM settlelist
        WHERE settlelist.slist_id IN (
            SELECT id FROM contract WHERE project_id = #{projectId}
        )
    </select>
    <!-- 2. 회차별 정산 대상 유저 목록 조회 (이미 정산된 경우 제외) -->
    <select id="selectFreelancersForSettlement" parameterType="map" resultType="dto.AdminSettleTarget">
    <![CDATA[
        SELECT
            c.id,
            c.freelancer_id,
            u.name AS freelancer_name,
            p.category_name,
            c.start_date,
            c.end_date,
            c.fphone,
            c.account,
            c.pay as total_pay,
            c.fee,
            DAY(c.settle_day) AS settle_day
        FROM contract c
                 JOIN freelancer f ON c.freelancer_id = f.freelancer_id
                 JOIN user u ON f.freelancer_id = u.user_id
                 JOIN pay p ON c.project_pay_id = p.project_pay_id
        WHERE c.project_id = #{projectId}
          AND NOT EXISTS (
            SELECT 1
            FROM settlement s
                     JOIN settlelist sl ON s.slist_id = sl.slist_id
            WHERE sl.project_id = #{projectId}
              AND s.name = u.name
              AND s.start_date = #{startDate}
              AND s.end_date = #{endDate}
        )
        ]]>
</select>


    <select id="getMaxCntByProjectId" parameterType="int" resultType="int">
        SELECT IFNULL(MAX(cnt), 0)
        FROM settlelist
        WHERE project_id = #{projectId}
    </select>



    <!-- ✅ 최초 정산시 settlelist 테이블에 데이터 insert -->
    <insert id="createSettlelist" parameterType="dto.Settlelist" useGeneratedKeys="true" keyProperty="slistId">
            INSERT INTO settlelist (
                  contract_id,
                  project_pay_id,
                  project_id,
                  client_id,
                  pname,
                  ammount,
                  settle_date,
                  cnt
                ) VALUES (
                #{contractId},
                #{projectPayId},
                #{projectId},
                #{clientId},
                #{pname},
                #{ammount},
                #{settleDate},
                #{cnt}
                )
    </insert>

    <select id="selectLatestSettleDateByProjectId"  resultType="java.sql.Date">
        SELECT MAX(settle_date)
        FROM settlelist
        WHERE project_id = #{value}
    </select>

    <select id="selectSettlelistByDateAndProject" resultType="dto.Settlelist" parameterType="map">
        SELECT * FROM settlelist
        WHERE project_id = #{projectId}
          AND settle_date = #{settleDate}
        LIMIT 1
    </select>

    <select id="selectSettlelistByContractIdAndDate" parameterType="map" resultType="dto.Settlelist">
        SELECT * FROM settlelist
        WHERE project_id = #{projectId}
          AND settle_date = #{settleDate}
        LIMIT 1
    </select>

    <select id="selectAnySettlelistByProjectIdAndDate" parameterType="map" resultType="dto.Settlelist">
        SELECT *
        FROM settlelist
        WHERE project_id = #{projectId}
          AND settle_date = #{settleDate}
        LIMIT 1
    </select>

    <select id="selectHistorySummaryList" parameterType="map" resultType="dto.AdminSettleHistorySummary">
        SELECT
        sl.slist_id,
        sl.project_id AS projectId,
        p.project_name AS projectName,
        DATE_FORMAT(sl.settle_date, '%Y-%m-%d') AS settleDate,
        sl.cnt AS cnt,
        SUM(s.ammount) AS totalAmount,
        MAX(s.status) AS status,
        SUM(c.pay) AS pay,
        SUM(c.fee) AS fee
        FROM settlement s
        JOIN settlelist sl ON s.slist_id = sl.slist_id
        JOIN contract c ON c.project_pay_id = s.category_id
        JOIN project p ON sl.project_id = p.project_id
        <where>
            <if test="keyword != null and keyword != ''">
                p.project_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="startDate != null and startDate != ''">
                AND sl.settle_date &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND sl.settle_date &lt;= #{endDate}
            </if>
        </where>
        GROUP BY sl.project_id, sl.settle_date, sl.cnt
        ORDER BY sl.settle_date DESC
        LIMIT #{offset}, #{limit}
    </select>



    <select id="countHistory" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT 1
        FROM settlement s
        JOIN settlelist sl ON s.slist_id = sl.slist_id
        JOIN project p ON sl.project_id = p.project_id
        <where>
            <if test="keyword != null and keyword != ''">
                p.project_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="startDate != null and startDate != ''">
                AND sl.settle_date &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND sl.settle_date &lt;= #{endDate}
            </if>
        </where>
        GROUP BY sl.project_id, sl.settle_date, sl.cnt
        ) sub
    </select>
    <select id="selectSettlelistByProjectId" parameterType="int" resultType="settlement">
        SELECT *
        FROM settlelist
        WHERE project_id = #{projectId}
    </select>

    <select id="selectSettleTargetsByClient" parameterType="map" resultType="dto.ClientSettleTarget">
        SELECT u.name AS freelancerName,
               IF((SELECT COUNT(*)
                   FROM settlelist s
                   WHERE s.project_id = c.project_id) = 0, CONCAT(
                          DATE_FORMAT(c.start_date, '%Y-%m-%d'),
                          ' ~ ',
                          DATE_FORMAT(DATE_SUB(c.settle_day, INTERVAL 1 DAY), '%Y-%m-%d')
                                                           ), CONCAT(
                          DATE_FORMAT(DATE_SUB(c.settle_day, INTERVAL 1 MONTH), '%Y-%m-%d'),
                          ' ~ ',
                          DATE_FORMAT(DATE_SUB(c.settle_day, INTERVAL 1 DAY), '%Y-%m-%d')
                                                              )) AS settlePeriod,
               c.pay                                             AS pay
        FROM contract c
                 JOIN user u ON c.freelancer_id = u.user_id
        WHERE c.client_id = #{clientId}
          and c.project_id = #{projectId}
          AND c.status = '진행중'
    </select>

    <select id="getLatestSettleRound" resultType="int">
        SELECT MAX(cnt)
        FROM settlelist
        WHERE project_id = #{projectId}
    </select>

    <select id="countSettlementsByProjectAndRound" resultType="int">
        SELECT COUNT(*)
        FROM settlement s
                 JOIN settlelist sl ON s.slist_id = sl.slist_id
        WHERE sl.project_id = #{projectId}
          AND sl.cnt = #{cnt}
    </select>

    <select id="countContractsByProject" resultType="int">
        SELECT COUNT(*)
        FROM contract
        WHERE project_id = #{projectId}
    </select>

    <select id="getUsedSettleRounds" resultType="int">
        SELECT DISTINCT sl.cnt
        FROM settlement s
                 JOIN settlelist sl ON s.slist_id = sl.slist_id
        WHERE sl.project_id = #{projectId}
        ORDER BY sl.cnt DESC
    </select>


</mapper>

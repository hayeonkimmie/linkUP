<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="mapper.settlement">
    <!-- 4. 정산 내역 테이블 등록 -->
    <insert id="insertSettlement" parameterType="dto.Settlement" useGeneratedKeys="true">
        INSERT INTO settlement (
            slist_id,
            category_id,
            client_id,
            pname,
            ammount,
            start_date,
            end_date,
            settleday,
            position,
            name,
            status,
            account
        ) VALUES (
                     #{slistId},
                     #{categoryId},
                     #{clientId},
                     #{pname},
                     #{ammount},
                     #{startDate},
                     #{endDate},
                     #{settleday},
                     #{position},
                     #{name},
                     #{status},
                     #{account}
                 )
    </insert>

    <select id="countSettlementsByProjectAndDate" parameterType="Map" resultType="int">
        SELECT COUNT(*)
        FROM settlement s
                 JOIN settlelist sl ON s.slist_id = sl.slist_id
        WHERE sl.project_id = #{projectId}
          AND sl.settle_date = #{settleDate}
    </select>

    <select id="existsSettlementBySlistIdAndStartEndDate" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM settlement
        WHERE slist_id = #{slistId}
          AND start_date = #{startDate}
          AND end_date = #{endDate}
          AND name = #{freelancerName}
    </select>

    <select id="selectSettlementHistoryDetail" parameterType="int" resultType="dto.AdminSettleHistory">
        SELECT
            s.slist_id,
            sl.cnt,
            p.project_name AS projectName,
            u.name AS freelancerName,
            pmanager AS position,
            s.ammount AS amount,
            c.account,
            DATE_FORMAT(c.start_date, '%Y-%m-%d') AS startDate,
            DATE_FORMAT(c.end_date, '%Y-%m-%d') AS endDate,
            DATE_FORMAT(sl.settle_date, '%Y-%m-%d') AS settleDate,
            s.status
        FROM settlement s
                 JOIN settlelist sl ON s.slist_id = sl.slist_id
                 JOIN contract c ON sl.contract_id = c.id
                 JOIN project p ON sl.project_id = p.project_id
                 JOIN user u ON c.freelancer_id = u.user_id
        WHERE sl.slist_id = #{slistId}

        ORDER BY u.name
    </select>

    <select id="selectSettledFreelancers" parameterType="int" resultType="dto.SettledInfoDTO">
        SELECT
            s.name AS freelancerName,
            s.position AS position,
            DATEDIFF(s.end_date, s.start_date) DIV 30 + 1 AS duration,
            s.ammount AS settleAmount,
            s.status AS status,
            sl.cnt AS cnt,
            s.start_date AS startDate,
            s.end_date AS endDate
        FROM settlement s
                 JOIN settlelist sl ON s.slist_id = sl.slist_id
        WHERE s.slist_id = #{slistId}
    </select>



    <select id="selectWaitingFreelancers" parameterType="map" resultType="dto.SettledInfoDTO">
        SELECT
            a.freelancer_id,
            a.sub_category_name AS position,
            DATEDIFF(c.end_date, c.start_date) DIV 30 + 1 AS duration,
            c.pay AS settleAmount,
            '대기중' AS status,
            sl.cnt AS cnt,
            NULL AS startDate,
            NULL AS endDate
        FROM contract c
                 JOIN apply a ON c.apply_id = a.apply_id
                 JOIN settlelist sl ON c.project_id = sl.project_id
        WHERE c.project_id = #{projectId}
          AND NOT EXISTS (
            SELECT 1
            FROM settlement s
            WHERE s.slist_id = #{slistId}
              AND s.category_id = c.project_pay_id
        )
    </select>




</mapper>
